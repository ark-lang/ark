[c] func printf(fmt: str, ...) -> int;

type Thing struct {
    x: int
};

func (v: Thing) do() {
    C::printf("did! %d\n", v.x);
}

func (v: ^Thing) dop() {
    C::printf("didp! %d\n", v.x);
}

type Thing2 int;

func (v: Thing2) do() {
    C::printf("did, from an int!\n");
}

func main() -> int {
    mut thing: Thing;
    thing.x = 6;

    C::printf("%x\n", thing);

    thing.do();

    thingptr := &thing;
    thingptr.dop();
    thingptr.do();

    thingptrptr := &thingptr;
    thingptrptr.dop();

    mut thing2: Thing2;

    thing2.do();

    return 0;
}
