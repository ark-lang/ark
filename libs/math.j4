// Standard Maths Library
// for Jayfor, this is a WIP
// and a "testing" ground for
// the language as of writing this
//
// 07/12/2014
// Written by: 
// 	  Felix A  - freefouran[at]gmail.com
// 	  Vedant N - captainchloride[at]gmail.com

double PI = 3.14159265358979323846264338327950288;

fn toRadians(double degrees): double {
	ret (degrees * (PI / 180));
}

fn toDegrees(double radians): double {
	ret (radians * (180 / PI));
}

fn clamp(double value, double low, double high): double {
	// just return value for now
	// ifs or ternary unsupported
	ret value;
}

fn floor(float x): float {
	ret (x - (x % 1));
}

fn abs(float x): int {
	// see clamp();
	ret x;
}

fn pow(float mantissa, float exponent): float {
	float result = 1.0;
	float count = 0;
	// while count < exponent {
	// 	result = (mantissa * result);
	// 	count += 1;
	// }
	ret result;
}

fn factorial(int number): int {
	int final_result = 1;
	for int i:(0, number+1) {
		final_result = (final_result * i);
	}
	ret final_result;
}
	
